=========================
Data Specification v1.7.0
=========================

*Note: This document is written with NumPy indexing, which is zero-indexed.
This is especially noteworthy since the Fortran code is one-indexed.*

Folder root
-----------
Purpose:
  Stores all files related to a run

Name:
  First 13 characters are the experiment code, YYYY-MM-DD-hh.
  Last two caracters are a two-digit number giving the run's position
  in the experiment

Run files
++++++++++++++++

``README.rst``
  Brief explanation of the experiment and the source of the data

``params.json``
  The parameters of the run (scenario & mechanism combined)

``job.slurm``
  The Slurm script that executed the code

``job.slurm-XXXXXXXX.out``
  The output of the slurm script that executed
  the code. XXXXXXXX is the job number with higher numbers indicating
  later runs

Microscale files
++++++++++++++++

``micro.f90``
  Fortran source code for the microscale model.
  This is the code that was used in this run.

  :Data Type: 
    Plain text

``micro.txt``
  Output log for microscale simulation.

  :Data Type: 
    Plain text

``firstPLi.dat``
  Time to first plasmin

  :Data Type: 
    Binary (double)
  :Units:
    seconds
  :Dimensions: 
    ``micro_params.simulations`` x 1

``lasttPA.dat``
  The number of tPA molecules in the fiber at the end of the simulation.

  :Data Type: 
    Binary (int32)
  :Units:
    None
  :Dimensions: 
    ``micro_params.simulations`` x 1

``lyscomplete.dat``
  Whether or not lysis is complete at the end of the simulation. That
  is, at least :math:`\frac{2}{3}` of binding doublets were degraded.
  1 for yes, 0 for no.

  :Data Type: 
    Binary (int32)
  :Units:
    None
  :Dimensions: 
    ``micro_params.simulations`` x 1

``lysis.dat``
  The amount of time elapsed in each simulation. If lysis completed,
  this is the time at which that occurred.

  :Data Type: 
    Binary (double)
  :Units:
    seconds
  :Dimensions: 
    ``micro_params.simulations`` x 1

``PLi.dat``
  The number of Plasmin molecules generated in the fiber
  by the end of the simulation.

  :Data Type: 
    Binary (int32)
  :Units:
    None
  :Dimensions: 
    ``micro_params.simulations`` x 1

``tPA_time.dat``
  The simulation time elapsed when the tPA molecule leaves the system
  or the total elapsed time of the simulation if the simulation ends
  with the tPA molecule still bound. 
  
  Examples:
  
  - If ``lasttPA[35]=0`` and ``tPA_time[35]=74`` then the tPA molecule 
    unbound in simulation 36 after 74 seconds. 
  
  - If ``lasttPA[42]=1`` and ``tPA_time[42]=64`` then full lysis took 
    place in simulation 43 after 64 seconds.

  :Data Type: 
    Binary (double)
  :Units:
    seconds
  :Dimensions: 
    ``micro_params.simulations`` x 1

``tPAPLiunbd.dat``
  Whether or not tPA was forced to unbind by plasmin-mediated
  degradation of fibrin.
  1 for yes, 0 for no.

  :Data Type: 
    Binary (int32)
  :Units:
    None
  :Dimensions: 
    ``micro_params.simulations`` x 1

``tPAunbind.dat``
  Whether or not tPA unbinds from the fiber by itself (kinetically).
  1 for yes, 0 for no.

  :Data Type: 
    Binary (int32)
  :Units:
    None
  :Dimensions: 
    ``micro_params.simulations`` x 1


Macroscale files
++++++++++++++++

``macro.f90``
  Fortran source code for the macroscale model.
  This is the code that was used in this run.

  :Data Type: 
    Plain text

*Note: The following data files are generated from the microscale data
and are used as input for the macroscale model. They are generated by
sorting all of the macroscale simulations into 100 sets of equal 
quantity by tPA_time.*

*That is, the first set contains the 1% of simulations with the shortest
tPA_time, then the next set contains the 1% of simulations with the 
next shortest tPA_time, etc.*

``tPAleave.dat``
  The fractional boundaries of the sets of microscale simulations.
  That is, if ``tPAleave`` has indices 0 through 100, then the 
  :math:`j^{th}` set contains microscale simulations whose 
  ``tPA_times`` are in the ``tPAleave[j]*100``-th percentile.

  Examples:

  - ``tPAleave[0]=0`` and ``tPAleave[1]=0.01`` so the first set 
    contains the 1% of simulations with the shortest ``tPA_time``.

  - ``tPAleave[15]=0.15`` and ``tPAleave[16]=0.16``, so the 16th
    set contains those simulations whose ``tPA_time`` is longer than 15%
    of all simulations and shorter than 84% of simulations.

  - ``tPAleave[99]=0.99`` and ``tPAleave[100]=1``, so the last (100th)
    set contains the 1% of simulations with the longest ``tPA_time``.

  :Data Type: 
    Binary (double)
  :Units:
    None
  :Dimensions: 
    101 x 1

``tsectPA.dat``
  The ``tPA_time`` at the boundaries of the 100 sets of microscale
  simulations. That is, the 1% of simulations in the :math:`j^{th}`
  set have ``tPA_times`` in the interval (tsectPA[j-1], tsectPA[j]].

  These values are used to interpolate random tPA unbinding times in
  the macroscale model.

  Example:

  - If ``tsectPA[15]=11`` and ``tsectPA[16]=13``, the 16th
    set contains those simulations whose ``tPA_time`` was longer than
    11 seconds and no greater than 13 seconds.

  :Data Type: 
    Binary (double)
  :Units:
    seconds
  :Dimensions: 
    101 x 1

``lysismat.dat``
  The ``lysis`` times for the microscale simulation, arranged by their
  ``tPA_time`` sets. That is, column :math:`j-1` of the array contains the
  ``lysis`` times for those simulations in the :math:`j^{th}` set discribed
  by ``tsectPA`` above.

  Each column in the array is sorted by ascending values.

  If :math:`\frac{2}{3}` of binding doublets were degraded, full lysis is
  declared and the time at which that occurred is recorded in this array.
  If the simulation halted because the tPA left the system, no Plasmin
  were left in the system, and more than :math:`\frac{1}{3}` remained, then
  the value 6000 is recorded in this array.

  These values are used to interpolate random fiber degradation times in the
  macroscale model.

  Examples:

  - If ``lysismat[12, 15]=18`` then this simulation had a ``tPA_time`` in the 16th
    percentile (the 16th ``tsectPA`` set), since it is in the 16th column of the array.
    This simulation had the 13th fastest lysis out of the simulations in its set, since
    it is in the 13th row of the array. This simulation resulted in full lysis 18 seconds
    after the tPA first entered the system.

  - If ``lysismat[22, 15]=6000`` then this simulation had a ``tPA_time`` in the 16th
    percentile (the 16th ``tsectPA`` set), since it is in the 16th column of the array.
    This simulation did NOT result in full lysis as its entry is recorded as ``6000``.

  :Data Type: 
    Binary (double)
  :Units:
    seconds
  :Dimensions: 
    ``micro_params.simulations``/100 x 100

``lenlysisvect.dat``
  The first occurrence of a ``6000`` value in each column of the ``lysismat``
  array. This implies that, for the :math:`j^{th}` set of simulations (divided
  by ``tsectPA`` as above), ``lenlysisvect[j-1]-1`` of those simulations resulted
  in full lysis, and entry  ``lenlysisvect[j-1]-1`` is the first entry of column
  :math:`j-1` of the ``lysismat`` array with value ``6000``.

  Example:
  
  - If ``lenlysisvect[15]=19``, then out of the simulations in the 16th percentile
    for ``tPA_time`` (the 16th ``tsectPA`` set), 18 of them resulted in full lysis.
    ``lysismat[:18, 15]`` contains valid full-lysis times, but the rest of the column,
    starting with ``lysismat[18, 15]`` have the value ``6000``.

  :Data Type: 
    Binary (double)
  :Units:
    seconds
  :Dimensions: 
    100 x 1

Subfolders
----------
:Purpose:
  Stores all files related to an individual macroscale simulation

:Name: 
  A two-digit number giving the macroscale simulations's position
  in the run array

``macro.txt``
  Output log for the macroscale simulation.

  :Data Type: 
    Plain text
